-- File: top_convolve2D.vhd
-- Generated by MyHDL 1.0dev
-- Date: Mon Aug 17 17:10:26 2015


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_10.all;

entity top_convolve2D is
    port (
        Clk: in std_logic;
        Reset: in std_logic;
        D: in unsigned(7 downto 0);
        AY: in unsigned(1 downto 0);
        AX: in unsigned(1 downto 0);
        WrA: in std_logic;
        WrB: in std_logic;
        Q: out unsigned(19 downto 0)
    );
end entity top_convolve2D;
-- the ultimate test? 

architecture MyHDL of top_convolve2D is



type a3_u8 is array(0 to 3-1) of unsigned(7 downto 0);
type a3_a3_u8 is array(0 to 3-1) of a3_u8;
type a3_u16 is array(0 to 3-1) of unsigned(15 downto 0);
type a3_a3_u16 is array(0 to 3-1) of a3_u16;


constant NX: integer := 3;
constant NY: integer := 3;


signal dataa: a3_a3_u8;
signal datab: a3_a3_u8;
signal conv_m_Result: a3_a3_u16;

begin





top_convolve2D_wa_rtl: process (Clk, Reset) is
begin
    if (Reset = '1') then
        dataa(0)(0) <= to_unsigned(0, 8);
        dataa(0)(1) <= to_unsigned(0, 8);
        dataa(0)(2) <= to_unsigned(0, 8);
        dataa(1)(0) <= to_unsigned(0, 8);
        dataa(1)(1) <= to_unsigned(0, 8);
        dataa(1)(2) <= to_unsigned(0, 8);
        dataa(2)(0) <= to_unsigned(0, 8);
        dataa(2)(1) <= to_unsigned(0, 8);
        dataa(2)(2) <= to_unsigned(0, 8);
    elsif rising_edge(Clk) then
        for k in 0 to 3-1 loop
            for j in 0 to 3-1 loop
                if ((k = signed(resize(AY, 3))) and (j = signed(resize(AX, 3))) and bool(WrA)) then
                    dataa(k)(j) <= D;
                end if;
            end loop;
        end loop;
    end if;
end process top_convolve2D_wa_rtl;


top_convolve2D_wb_rtl: process (Clk, Reset) is
begin
    if (Reset = '1') then
        datab(0)(0) <= to_unsigned(0, 8);
        datab(0)(1) <= to_unsigned(0, 8);
        datab(0)(2) <= to_unsigned(0, 8);
        datab(1)(0) <= to_unsigned(0, 8);
        datab(1)(1) <= to_unsigned(0, 8);
        datab(1)(2) <= to_unsigned(0, 8);
        datab(2)(0) <= to_unsigned(0, 8);
        datab(2)(1) <= to_unsigned(0, 8);
        datab(2)(2) <= to_unsigned(0, 8);
    elsif rising_edge(Clk) then
        for k in 0 to 3-1 loop
            for j in 0 to 3-1 loop
                if ((k = signed(resize(AY, 3))) and (j = signed(resize(AX, 3))) and bool(WrB)) then
                    datab(k)(j) <= D;
                end if;
            end loop;
        end loop;
    end if;
end process top_convolve2D_wb_rtl;


top_convolve2D_conv_m_rtl: process (Clk) is
begin
    if rising_edge(Clk) then
        for k in 0 to NY-1 loop
            for j in 0 to NX-1 loop
                conv_m_Result(k)(j) <= (dataa(k)(j) * datab(k)(j));
            end loop;
        end loop;
    end if;
end process top_convolve2D_conv_m_rtl;


top_convolve2D_conv_s_rtl: process (Clk) is
    variable sum2D: unsigned(19 downto 0);
begin
    if rising_edge(Clk) then
        sum2D := to_unsigned(0, 20);
        for k in 0 to NY-1 loop
            for j in 0 to NX-1 loop
                sum2D := (sum2D + conv_m_Result(k)(j));
            end loop;
        end loop;
        Q <= sum2D;
    end if;
end process top_convolve2D_conv_s_rtl;

end architecture MyHDL;
